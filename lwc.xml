<?xml version="1.0" encoding="UTF-8"?>
<ruleset
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	name="My LWC rules"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd"
>
	<description>Default ruleset for LWC</description>
	<rule
		name="DontUseCustomEvent"
		language="ecmascript"
		message="Avoid using standard CustomEvent class, declare subclass"
		externalInfoUrl="https://github.com/Ziemniakoss/pmd-rules/wiki/LWC#dontusecustomevent"
		class="net.sourceforge.pmd.lang.rule.XPathRule"
	>
		<description>
			By defining custom class for event, you are making it clear what
			kind of events can be dispatched by component.
			This in turn simplifies search for event names and details
			structure.
			If your team uses jsdocs and knows how to setup jsconfigs files, extracting events to separate classes can
			even provide better autocompletion.
		</description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value>
					<![CDATA[
					//NewExpression/Name[@Identifier='CustomEvent']
    				]]>
				</value>
			</property>
		</properties>
		<example>
			<![CDATA[
/**
 * @augments {CustomEvent<schema.Account[]>}
 */
export class MyCustomEvent extends CustomEvent {
	constructor(accounts) {
		super("myeventname, {details:accounts})
	}
}
		</example>
	</rule>
</ruleset>]]>
		</example>
	</rule>
</ruleset>